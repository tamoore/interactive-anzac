/// Sets the default color for dark text contrast 
/// 
/// @type  Stringsas
$dark-text-default: #000 !default;

/// Sets the default color for light text contrast 
/// 
/// @type  String
$light-text-default: #fff !default;

// Calculeate brightness of a given color.
@function brightness($color) {
  @return ((red($color) * .299) + (green($color) * .587) + (blue($color) * .114)) / 255 * 100%;
}

// Compares contrast of a given color to the light/dark arguments and returns whichever is most "contrasty"
@function color-contrast($color, $dark: $dark-text-default, $light: $light-text-default) {
  @if $color == null {
    @return null;
  }
  @else {
    $color-brightness: brightness($color);
    $light-text-brightness: brightness($light);
    $dark-text-brightness: brightness($dark);
    @return if(abs($color-brightness - $light-text-brightness) > abs($color-brightness - $dark-text-brightness), $light, $dark);
  }
}

// Returns Contrast for cover title
// if not null
@mixin returnContrastedProperty($color, $colorVar, $property, $darken:$dark-text-default, $ligthen:$light-text-default){
  @if $colorVar == null {
    #{$property}: color-contrast($color, $darken, $ligthen);
  }
  @else{
    #{$property}: $colorVar;
  }  
} 